module Test where

import Main
import Setup
import Daml.Script

testCreateAuctionAcc : Script (TestParties, TestBidders, TestAuctionAccInfos, ContractId AuctionAcc)
testCreateAuctionAcc = script do
    (testParties@TestParties{..}, testBidders@TestBidders{..}, testAuctionAccInfos@TestAuctionAccInfos{..}) <- setupAuctionAccInfos
    -- 1. bidder creates a AuctionAcc contract
     
    acc1 <- submit auctioneer do
        createCmd AuctionAcc with
            bidder = firstBidder
            auctioneer 
            bidderId = accInfo1.bidderId
            bidderName = accInfo1.bidderName
            bidderPhone = accInfo1.bidderPhone
            isVerified = accInfo1.isVerified 
            accBalance = accInfo1.accBalance 

    return (testParties, testBidders, testAuctionAccInfos, acc1)

testVerifyAuctionAcc : Script (TestParties, TestBidders, TestAuctionAccInfos , ContractId AuctionAcc)
testVerifyAuctionAcc = script do
    (testParties@TestParties{..}, testBidders@TestBidders{..}, testAuctionAccInfos@TestAuctionAccInfos{..}, acc1Cid ) <- testCreateAuctionAcc
    -- 2. auctioneer verifies the Auction contract
    acc1Verified <- submit auctioneer do
        exerciseCmd acc1Cid VerifyAcc with 
            isVerified = True 

    return (testParties, testBidders , testAuctionAccInfos, acc1Verified)

testDepositAuctionAcc : Script (TestParties, TestBidders, TestAuctionAccInfos , ContractId AuctionAcc)
testDepositAuctionAcc = script do
    (testParties@TestParties{..}, testBidders@TestBidders{..}, testAuctionAccInfos@TestAuctionAccInfos{..}, acc2VerifiedCid) <- testVerifyAuctionAcc 

    -- 3. bidder deposits money to the Auction contract
    acc1VerifiedAndDeposited <- submit firstBidder do 
        exerciseCmd acc2VerifiedCid Deposit with 
            amount = 1000.0 

    return (testParties, testBidders , testAuctionAccInfos, acc1VerifiedAndDeposited)

 